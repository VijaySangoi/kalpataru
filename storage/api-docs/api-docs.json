{
    "openapi": "3.0.0",
    "info": {
        "title": "Kalpataru Api 1.0.0",
        "version": "0.1"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "generate a token",
                "description": "generates a token for valid credential",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "username",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "description": "password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "create a user",
                "description": "create a user",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "username",
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "email": {
                                        "description": "email",
                                        "type": "email",
                                        "example": "sample123@gmail.com"
                                    },
                                    "password": {
                                        "description": "password",
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "confirm_password": {
                                        "description": "same as password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/trigger/{job_id}": {
            "get": {
                "tags": [
                    "Job"
                ],
                "summary": "trigger",
                "description": "trigger",
                "operationId": "85223bed1398d2eb52d5906362e786e1",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/cip/register": {
            "post": {
                "tags": [
                    "CIP"
                ],
                "summary": "register endpoint",
                "description": "hit this endpoint with microcontroller and register/list/notify your ip address and details to server ",
                "operationId": "333b09165d91a6793f24b5f95131b549",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "device_name"
                                ],
                                "properties": {
                                    "device_name": {
                                        "description": "allowed only camel_case, if not passed as camel case the server will convert it to camel_case",
                                        "type": "string",
                                        "example": "3d_printer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/cip/message": {
            "get": {
                "tags": [
                    "CIP"
                ],
                "summary": "register endpoint",
                "description": "endpoint for MCU to fetch data. aka-rx of uart",
                "operationId": "c1cc826e3420686dcd8ecb3a52695737",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CIP"
                ],
                "summary": "register endpoint",
                "description": "enpoint for MCU to deliver data. aka-tx of uart",
                "operationId": "805e9d0b7c039e726a15511b145ebdff",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "sensors"
                                ],
                                "properties": {
                                    "sensors": {
                                        "description": "valid json only",
                                        "type": "json",
                                        "example": {
                                            "robot_arm": {
                                                "": "G1 X0 Y120 Z120"
                                            },
                                            "3d_printer": {
                                                "hot_end": "220c",
                                                "ins": "G1 F2700 E-5"
                                            },
                                            "miner": {
                                                "hash": "120h/s"
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/log-file": {
            "get": {
                "tags": [
                    "Log"
                ],
                "summary": "reads serial connection & historical connection",
                "description": "reads serial log, can read live connection",
                "operationId": "48e41ce952b2178007fef236837d0632",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fl_name"
                                ],
                                "properties": {
                                    "fl_name": {
                                        "description": "reads log file name",
                                        "type": "string",
                                        "example": "COM{port}-log-{dd}_{m}_{yyyy}.txt"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Log"
                ],
                "summary": "write to serial connection",
                "description": "manual write to serial pipe file, can write to live connection",
                "operationId": "7c8e274944df795a8dad8a63e4331cf8",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "fl_name"
                                ],
                                "properties": {
                                    "fl_name": {
                                        "description": "write to pipe file",
                                        "type": "json",
                                        "example": "COM{port}-pipe-{dd}_{m}_{yyyy}.txt"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/list-log-file": {
            "get": {
                "tags": [
                    "Log"
                ],
                "summary": "list all log file",
                "description": "list all historical log file available",
                "operationId": "16962656cdd3418c5b4547fc397f3f09",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/list_serial_devices": {
            "get": {
                "tags": [
                    "Serial"
                ],
                "summary": "list of all serial device",
                "description": "returns paginated list with size and page no",
                "operationId": "09089acd42e2ca7fbfadabc1befe6c68",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "size",
                                    "page"
                                ],
                                "properties": {
                                    "size": {
                                        "description": "pagination limit",
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "page": {
                                        "description": "page no.",
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Serial"
                ],
                "summary": "api to update or insert",
                "description": "performs update with id or insert with given details",
                "operationId": "2d50a8e602265a7ae184e925fd4a2065",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "size",
                                    "page",
                                    "name",
                                    "port",
                                    "baudrate"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "id of record to be updated, leave eempty if inserting new record",
                                        "type": "string",
                                        "example": "5"
                                    },
                                    "size": {
                                        "description": "pagination limit",
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "page": {
                                        "description": "page no.",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "name": {
                                        "description": "name of sensor",
                                        "type": "string",
                                        "example": "CNC-01"
                                    },
                                    "port": {
                                        "description": "name of com port",
                                        "type": "string",
                                        "example": "COM8"
                                    },
                                    "baudrate": {
                                        "description": "baudrate of receiving microcontroller node",
                                        "type": "string",
                                        "example": "115200"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Serial"
                ],
                "summary": "delete a serial device",
                "description": "delete a serial device from monitoring list",
                "operationId": "5a2011ccaba9250643fa035e368597e4",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "size",
                                    "page",
                                    "id"
                                ],
                                "properties": {
                                    "size": {
                                        "description": "pagination limit",
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "page": {
                                        "description": "page no.",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "id": {
                                        "description": "id of record to be deleted",
                                        "type": "string",
                                        "example": "5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/workers": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "list of all worker thread",
                "description": "returns paginated list with size and page no",
                "operationId": "9b444b971c5c5d69ce98754451cb4fc1",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "size",
                                    "page"
                                ],
                                "properties": {
                                    "size": {
                                        "description": "pagination limit",
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "page": {
                                        "description": "page no.",
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "api to update or insert",
                "description": "performs update with id or insert with given details",
                "operationId": "341f0559f7d7fc93a4952a70d60bcecf",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "size",
                                    "page",
                                    "name",
                                    "tries",
                                    "memory",
                                    "timeout"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "id of record to be updated, leave eempty if inserting new record",
                                        "type": "string",
                                        "example": "5"
                                    },
                                    "size": {
                                        "description": "pagination limit",
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "page": {
                                        "description": "page no.",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "name": {
                                        "description": "name of worker thread",
                                        "type": "string",
                                        "example": "thread-01"
                                    },
                                    "tries": {
                                        "description": "number of retry after fail",
                                        "type": "string",
                                        "example": "3"
                                    },
                                    "memory": {
                                        "description": "amount of memory in mb allocated for this worker thread",
                                        "type": "string",
                                        "example": "512"
                                    },
                                    "timeout": {
                                        "description": "deadline in second to fail job if it takes too long",
                                        "type": "string",
                                        "example": "60"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Worker"
                ],
                "summary": "delete a worker thread",
                "description": "delete a worker thread from list",
                "operationId": "f847be371cc915502c2b83e1645f4509",
                "requestBody": {
                    "description": "json body",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "size",
                                    "page",
                                    "id"
                                ],
                                "properties": {
                                    "size": {
                                        "description": "pagination limit",
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "page": {
                                        "description": "page no.",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "id": {
                                        "description": "id of record to be deleted",
                                        "type": "string",
                                        "example": "5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Authorization": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "Bearer"
            }
        }
    }
}